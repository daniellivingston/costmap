/*
 * Gradle build file for CostMAP.
 */

/*
plugins {
  id 'application'
  id 'org.openjfx.javafxplugin' version '0.0.9'
}

repositories {
    mavenCentral()
}
 */

plugins {
    id 'java'
}

group 'cost_MAP'
version '1.0'
ext.moduleName = 'cost_MAP.CostMAP'
//sourceCompatibility = 1.11

repositories {
    mavenCentral()
}

def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}
dependencies {
    "org.openjfx:javafx-base:11:${platform}"
    "org.openjfx:javafx-graphics:11:${platform}"
    "org.openjfx:javafx-controls:11:${platform}"
}


task run(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "main.Main"
}

jar {
    inputs.property("moduleName", moduleName)
    manifest {
        attributes('Automatic-Module-Name': moduleName)
    }
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls'
        ]
        classpath = files()
    }
}

task createJar(type: Copy) {
    dependsOn 'jar'
    into "$buildDir/libs"
    from configurations.runtime
}

//javafx {
//    version = "11"
//    modules = [
//        'javafx.controls',
//        'javafx.fxml',
//        'javafx.swing',
//        'javafx.base',
//        'javafx.graphics',
//        'javafx.web'
//    ]
//}

//compileJava {
//    options.compilerArgs << '-Xlint:unchecked'
//}
//
//applicationDefaultJvmArgs = ["-XX:MaxRAMFraction=1", "-verbosegc"]

/*
mainClassName = 'cost_MAP.Launcher'

jar {
    manifest {
        attributes 'Main-Class': 'cost_MAP.Launcher'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}*/